# Qodo Merge Configuration for PineCMS
# Documentation: https://qodo-merge-docs.qodo.ai/
# Last Updated: 2025-01-26 (Based on Official Qodo Spec)

[config]
# Model Selection - Using FREE Qodo Model (no API key needed!)
# Qodo provides GPT-4o-mini for free (75 PRs/month)
model = "gpt-4o-mini"  # FREE tier model

# Temperature (0.0 = deterministic, 1.0 = creative)
temperature = 0.2

# Max tokens for review
max_tokens = 4000

[pr_reviewer]
# Enable automatic PR review
enabled = true

# Number of code suggestions
num_code_suggestions = 5

# Inline file summary
inline_file_summary = true

# Inline feedback mode (improved readability)
inline_feedback = true

# Enable extra instructions from user
enable_help_text = true

# Enable ticket compliance check (Jira/Linear)
enable_ticket_compliance_check = false

# Require focused review (user tags @qodo-merge)
require_focused_review = false

# Require estimate review time
require_estimate_review_time = true

# Require test plan
require_test_plan = true

# Require security review
require_security_review = true

# Custom instructions for Laravel, Vue, and Security checks
# (Replaces invalid custom sections that were being ignored)
extra_instructions = """
Laravel-Specific Checks:
- Ensure FormRequest validation classes are used (not inline validation in controllers)
- Verify proper route model binding usage
- Check for eager loading to prevent N+1 queries (use `->with()`)
- Verify mass assignment protection ($fillable or $guarded)
- Ensure `env()` is never used directly (only in config files, use `config()` everywhere else)
- Check for `declare(strict_types=1);` at the top of all PHP files
- Verify explicit return type declarations for all methods
- Ensure Events are used for side effects (no hooks/observers pattern)

Vue-Specific Checks:
- Ensure Composition API is used (`<script setup>`)
- Verify TypeScript type safety (proper type definitions)
- Check component naming conventions (PascalCase for components)
- Ensure Inertia.js `<Form>` component is used (preferred over useForm)
- Verify single root element per Vue component
- Check for TailwindCSS classes (no inline styles)

Security Checks:
- Enable comprehensive security review
- Check for SQL injection vulnerabilities (use Eloquent/query builder, never raw SQL with user input)
- Check for XSS vulnerabilities (proper output escaping in Blade and Vue)
- Verify CSRF protection is enabled (Laravel default)
- Check for exposed secrets/API keys (never commit .env values)
- Verify proper authentication/authorization (gates/policies)
- Check for field-level encryption usage (CipherSweet for PII data)
"""

[pr_description]
# Auto-generate PR description
enabled = true

# Add labels automatically
enable_semantic_files_types = true

# Generate collapsible file list
use_bullet_points = true

# Add walking through changes
generate_ai_title = true

[pr_questions]
# Enable PR questions feature
enabled = true

# Number of questions to generate
num_questions = 3

[pr_code_suggestions]
# Enable code suggestions
enabled = true

# Number of suggestions
num_code_suggestions = 5

# Commit suggestions directly
commitable_code_suggestions = false

# Rank suggestions by importance
rank_suggestions = true

[pr_test]
# Enable test generation
enabled = true

# Testing framework (pytest, jest, phpunit)
testing_framework = "phpunit"

# Test file location pattern
test_file_pattern = "tests/{Feature,Unit}/**/*Test.php"

# Number of tests to generate
num_tests = 3

[pr_improve]
# Enable code improvement suggestions
enabled = true

# Number of improvements
num_code_suggestions = 4

# Summarize changes
summarize = true

[pr_add_docs]
# Enable documentation suggestions
enabled = true

# File types to document
file_types = [".php", ".vue", ".ts"]

[pr_update_changelog]
# Auto-update changelog
enabled = true

# Changelog file
changelog_file = "CHANGELOG.md"

[custom_labels]
# Custom labels for PR categorization
bug = ["bug", "fix", "bugfix"]
enhancement = ["feature", "feat", "enhancement"]
documentation = ["docs", "documentation"]
refactor = ["refactor", "refactoring"]
test = ["test", "tests", "testing"]

[ignore]
# Files/Directories to ignore
paths = [
    "vendor/**",
    "node_modules/**",
    "storage/**",
    "bootstrap/cache/**",
    "public/build/**",
    "coverage/**",
    "*.min.js",
    "*.min.css",
    "package-lock.json",
    "composer.lock"
]
